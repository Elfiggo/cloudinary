<?php

/**
 * @file
 * Install, update and uninstall functions for the cloudinary module.
 */

/**
 * Implements hook_requirements().
 */
function cloudinary_requirements($phase) {
  $requirements = array();
  $t = get_t();

  $error_message = isset($library['error message']) ? $library['error message'] : '';

  switch ($phase) {
    case 'runtime' :
      // Cloudinary library.
      if (($library = libraries_detect('cloudinary')) && !empty($library['installed'])) {
        $requirements['cloudinary'] = array(
          'title' => t('Cloudinary Library'),
          'value' => $library['version'],
          'severity' => REQUIREMENT_OK,
        );
      }
      else {
        $requirements['cloudinary'] = array(
          'title' => $t('Cloudinary Library'),
          'value' => $t('Cloudinary library missing.'),
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('!error You need to download the !cloudinary, extract the archive and place it in the cloudinary directory in the %path directory on your server.', array(
            '!error' => $error_message,
            '!cloudinary' => l($t('Cloudinary Library'), $library['download url']),
            '%path' => 'sites/all/libraries'
          )),
        );
      }

      // Cloudinary Environment variable.
      $api_env = variable_get('cloudinary_env_var', '');

      if (!$api_env) {
        $requirements['cloudinary_env_var'] = array(
          'title' => t('Cloudinary Environment Variable undefined'),
          'value' => 'Undefined',
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('!error You need to set the !link.', array(
            '!error' => $error_message,
            '!link' => l($t('environment variable'), 'admin/config/media/cloudinary')
          )),
        );
      }
      elseif (!_cloudinary_check_connection()) {
        $requirements['cloudinary_env_var'] = array(
          'title' => t('Cloudinary Environment Variable not correct'),
          'value' => 'Undefined',
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('!error You need to set the correct !link.', array(
            '!error' => $error_message,
            '!link' => l($t('environment variable'), 'admin/config/media/cloudinary')
          )),
        );
      }
      else {
        $requirements['cloudinary_env_var'] = array(
          'title' => t('Cloudinary Environment Variable'),
          'value' => 'OK',
          'severity' => REQUIREMENT_OK,
        );
      }

      // Cloudinary site prefix.
      $prefix = variable_get('cloudinary_site_prefix', '');

      if (strlen($prefix) == 0) {
        $requirements['cloudinary_prefix'] = array(
          'title' => t('Cloudinary Site Prefix undefined'),
          'value' => 'Undefined',
          'severity' => REQUIREMENT_ERROR,
          'description' => $t('!error You need to set the !link.', array(
            '!error' => $error_message,
            '!link' => l($t('site prefix'), 'admin/config/media/cloudinary')
          )),
        );
      }
      else {
        $requirements['cloudinary_prefix'] = array(
          'title' => t('Cloudinary Site Prefix'),
          'value' => $prefix,
          'severity' => REQUIREMENT_OK,
        );
      }
      break;
  }

  return $requirements;
}